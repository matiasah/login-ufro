{"version":3,"sources":["./src/app/modules/material/material.module.ts","./src/app/modules/authenticate/authenticate-routing.module.ts","./src/environments/environment.ts","./src/app/services/client.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/authenticate/authorize/authorize.component.ts","./src/app/modules/authenticate/authorize/authorize.component.html","./src/app/app.module.ts","./src/app/modules/authenticate/login/login.component.ts","./src/app/modules/authenticate/login/login.component.html","./src/app/app-routing.module.ts","./src/app/modules/authenticate/authenticate.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { TextFieldModule } from '@angular/cdk/text-field';\nimport { CUSTOM_ELEMENTS_SCHEMA, Injectable, NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Injectable({\n    providedIn: 'root'\n})\nclass CustomMatPaginatorIntl extends MatPaginatorIntl {\n\n    public constructor() {\n        super();\n        this.firstPageLabel = 'primera página';\n        this.itemsPerPageLabel = 'ítems por página';\n        this.lastPageLabel = 'última página';\n        this.nextPageLabel = 'siguiente página';\n        this.previousPageLabel = 'última página';\n    }\n\n    public getRangeLabel = (page: number, pageSize: number, length: number) => {\n        const minLength = Math.max(length, 0);\n        if (minLength === 0 || pageSize === 0) {\n            return '0 de ' + minLength;\n        }\n        const startIndex = page * pageSize;\n        const endIndex = startIndex < minLength ? Math.min(startIndex + pageSize, minLength) : startIndex + pageSize;\n        return (startIndex + 1) + ' - ' + endIndex + ' de ' + minLength;\n    }\n\n}\n\n@NgModule({\n    imports: [\n        // Módulos de Angular Material\n        TextFieldModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatListModule,\n        MatGridListModule,\n        MatCardModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatExpansionModule,\n        MatButtonToggleModule,\n        MatChipsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSnackBarModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatNativeDateModule\n    ],\n    exports: [\n        // Módulos de Angular Material\n        TextFieldModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatListModule,\n        MatGridListModule,\n        MatCardModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatExpansionModule,\n        MatButtonToggleModule,\n        MatChipsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSnackBarModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatNativeDateModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ],\n    providers: [\n        {\n            provide: MatPaginatorIntl,\n            useClass: CustomMatPaginatorIntl\n        }\n    ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthorizeComponent } from './authorize/authorize.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'oauth/authorize',\n        redirectTo: 'oauth/confirm_access',\n        pathMatch: 'full'\n    },\n    {\n        path: 'oauth/confirm_access',\n        component: AuthorizeComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthenticateRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host: window.location.origin\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ClientInfo } from '../interfaces/client-info';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n\n    public constructor(\n        private http: HttpClient\n    ) {\n\n    }\n\n    public getClientInfo(): Observable<ClientInfo> {\n        return this.http.get<ClientInfo>(`${environment.host}/oauth/confirm_access/client`, { withCredentials: true });\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { Event as RouterEvent, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    // Indicar si se encuentra \"navegando\" entre rutas\n    public navegando = true;\n\n    public constructor(\n        private router: Router\n    ) {\n\n        // Suscribirse a eventos de Router\n        this.router.events.subscribe(\n            (event: RouterEvent) => {\n\n                // Evento recibido\n                if (event instanceof NavigationStart) {\n                    if (!this.navegando) {\n                        // Inicio de navegación\n                        this.navegando = true;\n                    }\n                } else if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n                    if (this.navegando) {\n                        // Fin de navegación\n                        this.navegando = false;\n                    }\n                }\n            }\n        );\n\n    }\n\n}\n","<div *ngIf=\"navegando\" class=\"loading-shade\">\n    <mat-spinner></mat-spinner>\n</div>\n\n<router-outlet></router-outlet>","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ClientInfo } from 'src/app/interfaces/client-info';\nimport { ClientService } from 'src/app/services/client.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n    selector: 'app-authorize',\n    templateUrl: './authorize.component.html',\n    styleUrls: ['./authorize.component.scss']\n})\nexport class AuthorizeComponent implements OnInit, AfterViewInit {\n\n    // Información sobre el cliente\n    public clientInfo: ClientInfo;\n    public authorizeUrl: string = `${environment.host}/oauth/authorize`;\n\n    public constructor(\n        private clientService: ClientService\n    ) { }\n\n    public ngOnInit(): void {\n\n    }\n\n    public ngAfterViewInit(): void {\n        // Obtener información del cliente\n        this.clientService.getClientInfo().subscribe(\n            clientInfo => {\n\n                // Copiar información\n                this.clientInfo = clientInfo;\n            }\n        );\n    }\n\n}\n","<div class=\"w-full h-full\">\n    <div class=\"flex items-center justify-center w-full h-full\">\n        <div class=\"max-w-full sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-xl p-2\">\n            <mat-card class=\"mat-elevation-z6 p-4\">\n\n                <div class=\"container\">\n                    <div class=\"w-full\">\n                        <div class=\"flex justify-center\">\n                            <img src=\"assets/img/logo.jpg\" />\n                        </div>\n                        <div class=\"flex flex-col justify-center items-center\">\n                            <h2 class=\"mat-h2 mb-0\">Autorizar aplicación</h2>\n                        </div>\n                    </div>\n\n                    <div class=\"w-full\" *ngIf=\"!clientInfo\">\n                        <mat-progress-spinner class=\"m-auto\" diameter=\"48\" color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\n                    </div>\n\n                    <div class=\"grid grid-cols-12 w-full\" *ngIf=\"clientInfo\">\n\n                        <div class=\"flex justify-center col-span-12\">\n                            <span>¿Deseas autorizar <b>{{ clientInfo.client.nombre }}</b> para ocupar tu cuenta de usuario?</span>\n                        </div>\n\n                        <div class=\"flex justify-center col-span-12 mt-4\">\n\n                            <!-- Botón de inicio de sesión -->\n                            <div class=\"mr-2\">\n                                <form ngNoForm [action]=\"authorizeUrl\" method=\"post\">\n                                    <input name=\"user_oauth_approval\" value=\"true\" type=\"hidden\" />\n                                    <button mat-raised-button type=\"submit\" color=\"primary\">\n                                        Autorizar\n                                    </button>\n                                </form>\n                            </div>\n\n                            <!-- Botón de inicio de sesión -->\n                            <div class=\"ml-2\">\n                                <form ngNoForm [action]=\"authorizeUrl\" method=\"post\">\n                                    <input name=\"user_oauth_approval\" value=\"false\" type=\"hidden\" />\n                                    <button mat-raised-button type=\"submit\" color=\"warn\">\n                                        Denegar\n                                    </button>\n                                </form>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </mat-card>\n        </div>\n    </div>\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticateModule } from './modules/authenticate/authenticate.module';\nimport { MaterialModule } from './modules/material/material.module';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        MaterialModule,\n        AuthenticateModule,\n        AppRoutingModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    // Indicar si el usuario o contraseña son incorrectos\n    public incorrecto: boolean = false;\n\n    // Usuario\n    public username: string;\n    public password: string;\n\n    // Host\n    public host: string = environment.host;\n\n    public constructor(\n        private activatedRoute: ActivatedRoute\n    ) { }\n\n    public ngOnInit(): void {\n        // Identificar error\n        this.activatedRoute.queryParams.subscribe(\n            queryParams => {\n                // Identificar error\n                this.incorrecto = queryParams.error;\n            }\n        );\n    }\n\n}\n","<div class=\"w-full h-full\">\n    <div class=\"flex items-center justify-center w-full h-full\">\n        <div class=\"max-w-full sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-xl p-2\">\n            <mat-card class=\"mat-elevation-z6 p-4\">\n\n                <div class=\"container\">\n                    <div class=\"w-full\">\n                        <div class=\"flex justify-center\">\n                            <img src=\"assets/img/logo.jpg\" />\n                        </div>\n                        <div class=\"flex flex-col justify-center items-center\">\n                            <h2 class=\"mat-h2 mb-0\">Iniciar sesión</h2>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"incorrecto\" class=\"w-full mb-3\">\n                        <div class=\"flex justify-center\">\n                            <mat-card class=\"mat-elevation-z1 bg-warn\">\n                                Usuario o contraseña son incorrectos.\n                            </mat-card>\n                        </div>\n                    </div>\n\n                    <!-- Formulario de datos para inicio de sesión -->\n                    <form ngNoForm [action]=\"host + '/login'\" method=\"post\">\n                        <div class=\"grid grid-cols-12 w-full\">\n\n                            <mat-form-field class=\"col-span-12\" appearance=\"fill\">\n                                <input matInput type=\"text\" name=\"username\" #usernameForm=\"ngModel\" [(ngModel)]=\"username\" required placeholder=\"Nombre de usuario\">\n                                <mat-icon class=\"mr-2\" matPrefix>perm_identity</mat-icon>\n                                <mat-error *ngIf=\"usernameForm.hasError('required')\">\n                                    El campo es obligatorio\n                                </mat-error>\n                                <mat-error *ngIf=\"usernameForm.hasError('email')\">\n                                    Debe ser un correo válido\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field class=\"col-span-12\" appearance=\"fill\">\n                                <input matInput type=\"password\" name=\"password\" #passwordForm=\"ngModel\" [(ngModel)]=\"password\" required placeholder=\"Contraseña\">\n                                <mat-icon class=\"mr-2\" matPrefix>lock</mat-icon>\n                                <mat-error *ngIf=\"passwordForm.hasError('required')\">\n                                    El campo es obligatorio\n                                </mat-error>\n                            </mat-form-field>\n\n                            <div class=\"flex justify-center col-span-12 mt-2\">\n\n                                <!-- Botón de inicio de sesión -->\n                                <button mat-raised-button id=\"botonIngresar\" type=\"submit\" color=\"primary\">\n                                    Acceder\n                                </button>\n                            </div>\n\n                        </div>\n                    </form>\n\n                </div>\n\n            </mat-card>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { AuthenticateRoutingModule } from './authenticate-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { AuthorizeComponent } from './authorize/authorize.component';\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        AuthorizeComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        AuthenticateRoutingModule\n    ]\n})\nexport class AuthenticateModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}